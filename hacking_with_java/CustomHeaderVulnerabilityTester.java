import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class CustomHeaderVulnerabilityTester {

    public static void main(String[] args) {
        // Ask for the target website URL
        System.out.print("\u001B[34mEnter your target website URL: \u001B[0m");
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String targetUrl = null;
        try {
            targetUrl = reader.readLine();
        } catch (IOException e) {
            e.printStackTrace();
            return;
        }

        // Test for Custom Header Vulnerabilities
        boolean vulnerable = testCustomHeaderVulnerability(targetUrl);

        // Display result
        if (vulnerable) {
            System.out.println("\u001B[31mThe target website is vulnerable to Custom Header Vulnerabilities.\u001B[0m");
            System.out.println("\u001B[33mTo test the vulnerability, try adding a custom header to the HTTP request and observe if the server accepts it.\u001B[0m");
        } else {
            System.out.println("\u001B[32mThe target website is not vulnerable to Custom Header Vulnerabilities.\u001B[0m");
        }
    }

    private static boolean testCustomHeaderVulnerability(String targetUrl) {
        try {
            URL url = new URL(targetUrl);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestProperty("X-Test-Header", "TestValue");
            connection.connect();
            int responseCode = connection.getResponseCode();
            return responseCode == HttpURLConnection.HTTP_OK;
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }
    }
}
